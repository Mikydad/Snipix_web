{"ast":null,"code":"var _jsxFileName = \"/Users/miko/Documents/Project/real_projects/Snipix_web/src/components/TimelineEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useGesture } from 'react-use-gesture';\nimport { useAppSelector, useAppDispatch } from '../redux/store';\nimport { setPlayheadTime, setZoom, selectClip, clearSelection, moveClip, splitClip } from '../redux/slices/timelineSlice';\nimport TimelineRuler from './TimelineRuler';\nimport TimelineTrack from './TimelineTrack';\nimport Playhead from './Playhead';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimelineContainer = styled.div`\n  position: relative;\n  height: 100%;\n  background: ${({\n  theme\n}) => theme.colors.surface};\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n_c = TimelineContainer;\nconst TimelineHeader = styled.div`\n  height: 60px;\n  background: ${({\n  theme\n}) => theme.colors.surface};\n  border-bottom: 1px solid ${({\n  theme\n}) => theme.colors.border};\n  display: flex;\n  align-items: center;\n  padding-left: 120px; /* Account for layer headers width */\n`;\n_c2 = TimelineHeader;\nconst TimelineBody = styled.div`\n  flex: 1;\n  display: flex;\n  overflow: hidden;\n`;\n_c3 = TimelineBody;\nconst LayerHeadersContainer = styled.div`\n  width: 120px;\n  background: ${({\n  theme\n}) => theme.colors.surfaceHover};\n  border-right: 1px solid ${({\n  theme\n}) => theme.colors.border};\n  flex-shrink: 0;\n`;\n_c4 = LayerHeadersContainer;\nconst TimelineContent = styled.div`\n  flex: 1;\n  position: relative;\n  transform: scaleX(${({\n  $zoom\n}) => $zoom});\n  transform-origin: left top;\n`;\n_c5 = TimelineContent;\nconst TracksContainer = styled.div`\n  position: relative;\n  height: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n_c6 = TracksContainer;\nconst PlayheadContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  z-index: 1000;\n  pointer-events: none;\n`;\n_c7 = PlayheadContainer;\nconst ZoomControls = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  display: flex;\n  gap: ${({\n  theme\n}) => theme.spacing.sm};\n  z-index: 100;\n`;\n_c8 = ZoomControls;\nconst ZoomButton = styled.button`\n  width: 32px;\n  height: 32px;\n  border: 1px solid ${({\n  theme\n}) => theme.colors.border};\n  background: ${({\n  theme\n}) => theme.colors.surface};\n  color: ${({\n  theme\n}) => theme.colors.text};\n  border-radius: ${({\n  theme\n}) => theme.borderRadius.sm};\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  \n  &:hover {\n    background: ${({\n  theme\n}) => theme.colors.surfaceHover};\n  }\n`;\n_c9 = ZoomButton;\nconst TimelineEditor = ({\n  projectId,\n  layers,\n  playheadTime,\n  zoom,\n  duration\n}) => {\n  _s();\n  const dispatch = useAppDispatch();\n  const timelineRef = useRef(null);\n  const {\n    selectedClips\n  } = useAppSelector(state => state.timeline);\n  const [isDraggingPlayhead, setIsDraggingPlayhead] = React.useState(false);\n\n  // Convert time to pixels based on zoom\n  const timeToPixels = useCallback(time => {\n    const pixelsPerSecond = 100; // Base pixels per second\n    return time * pixelsPerSecond * zoom;\n  }, [zoom]);\n\n  // Convert pixels to time\n  const pixelsToTime = useCallback(pixels => {\n    const pixelsPerSecond = 100;\n    return pixels / (pixelsPerSecond * zoom);\n  }, [zoom]);\n\n  // Handle timeline scrolling\n  const handleTimelineScroll = useCallback(deltaX => {\n    const newTime = playheadTime - pixelsToTime(deltaX);\n    dispatch(setPlayheadTime(Math.max(0, Math.min(newTime, duration))));\n  }, [playheadTime, duration, pixelsToTime, dispatch]);\n\n  // Handle zoom\n  const handleZoom = useCallback(delta => {\n    const newZoom = Math.max(0.1, Math.min(10, zoom + delta * 0.1));\n    dispatch(setZoom(newZoom));\n  }, [zoom, dispatch]);\n\n  // Handle clip selection\n  const handleClipClick = useCallback((clipId, event) => {\n    if (event.ctrlKey || event.metaKey) {\n      // Multi-select\n      const newSelection = selectedClips.includes(clipId) ? selectedClips.filter(id => id !== clipId) : [...selectedClips, clipId];\n      // For now, just select single clip\n      dispatch(selectClip(clipId));\n    } else {\n      dispatch(selectClip(clipId));\n    }\n  }, [selectedClips, dispatch]);\n\n  // Handle playhead positioning\n  const handlePlayheadClick = useCallback(event => {\n    if (!timelineRef.current) return;\n    const rect = timelineRef.current.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const newTime = pixelsToTime(x);\n    dispatch(setPlayheadTime(Math.max(0, Math.min(newTime, duration))));\n    dispatch(clearSelection());\n  }, [pixelsToTime, duration, dispatch]);\n\n  // Handle timeline click (not on clips)\n  const handleTimelineClick = useCallback(event => {\n    // Only handle clicks on the timeline background, not on clips\n    if (event.target === event.currentTarget) {\n      var _timelineRef$current;\n      const rect = (_timelineRef$current = timelineRef.current) === null || _timelineRef$current === void 0 ? void 0 : _timelineRef$current.getBoundingClientRect();\n      if (!rect) return;\n      const x = event.clientX - rect.left;\n      const newTime = pixelsToTime(x);\n      dispatch(setPlayheadTime(Math.max(0, Math.min(newTime, duration))));\n      dispatch(clearSelection());\n    }\n  }, [pixelsToTime, duration, dispatch]);\n\n  // Handle playhead drag move\n  const handlePlayheadDragMove = useCallback(event => {\n    if (!isDraggingPlayhead || !timelineRef.current) return;\n    const rect = timelineRef.current.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const newTime = pixelsToTime(x);\n    dispatch(setPlayheadTime(Math.max(0, Math.min(newTime, duration))));\n  }, [isDraggingPlayhead, pixelsToTime, duration, dispatch]);\n\n  // Handle playhead drag end\n  const handlePlayheadDragEnd = useCallback(() => {\n    setIsDraggingPlayhead(false);\n    document.body.style.cursor = 'default';\n  }, []);\n\n  // Handle clip splitting at playhead\n  const handleSplitAtPlayhead = useCallback(() => {\n    if (selectedClips.length === 1) {\n      const clipId = selectedClips[0];\n      const layer = layers.find(l => l.clips.some(c => c.id === clipId));\n      if (layer) {\n        const clip = layer.clips.find(c => c.id === clipId);\n        if (clip && playheadTime > clip.startTime && playheadTime < clip.endTime) {\n          dispatch(splitClip({\n            layerId: layer.id,\n            clipId: clip.id,\n            splitTime: playheadTime\n          }));\n        }\n      }\n    }\n  }, [selectedClips, layers, playheadTime, dispatch]);\n\n  // Gesture handling for timeline scrolling\n  const bind = useGesture({\n    onDrag: ({\n      delta: [deltaX],\n      event\n    }) => {\n      if (event.target === timelineRef.current) {\n        handleTimelineScroll(deltaX);\n      }\n    },\n    onWheel: ({\n      delta: [deltaX, deltaY],\n      event\n    }) => {\n      if (event.ctrlKey || event.metaKey) {\n        // Zoom\n        event.preventDefault();\n        handleZoom(-deltaY);\n      } else {\n        // Scroll timeline\n        event.preventDefault();\n        handleTimelineScroll(deltaX);\n      }\n    }\n  });\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = event => {\n      switch (event.key) {\n        case ' ':\n          event.preventDefault();\n          // Toggle play/pause\n          break;\n        case 'ArrowLeft':\n          event.preventDefault();\n          dispatch(setPlayheadTime(Math.max(0, playheadTime - 1)));\n          break;\n        case 'ArrowRight':\n          event.preventDefault();\n          dispatch(setPlayheadTime(Math.min(duration, playheadTime + 1)));\n          break;\n        case 'Delete':\n          event.preventDefault();\n          // Delete selected clips\n          break;\n        case 'c':\n          if (event.ctrlKey || event.metaKey) {\n            event.preventDefault();\n            // Copy selected clips\n          }\n          break;\n        case 'v':\n          if (event.ctrlKey || event.metaKey) {\n            event.preventDefault();\n            // Paste clips\n          }\n          break;\n        case 'z':\n          if (event.ctrlKey || event.metaKey) {\n            event.preventDefault();\n            if (event.shiftKey) {\n              // Redo\n            } else {\n              // Undo\n            }\n          }\n          break;\n        case 's':\n          if (event.ctrlKey || event.metaKey) {\n            event.preventDefault();\n            // Save timeline\n          }\n          break;\n      }\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [playheadTime, duration, dispatch]);\n\n  // Handle playhead dragging\n  useEffect(() => {\n    if (isDraggingPlayhead) {\n      const handleMouseMove = event => {\n        handlePlayheadDragMove(event);\n      };\n      const handleMouseUp = () => {\n        handlePlayheadDragEnd();\n      };\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [isDraggingPlayhead, handlePlayheadDragMove, handlePlayheadDragEnd]);\n  return /*#__PURE__*/_jsxDEV(TimelineContainer, {\n    ref: timelineRef,\n    ...bind(),\n    children: [/*#__PURE__*/_jsxDEV(TimelineHeader, {\n      children: /*#__PURE__*/_jsxDEV(TimelineRuler, {\n        duration: duration,\n        zoom: zoom,\n        playheadTime: playheadTime,\n        onTimeClick: handlePlayheadClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TimelineBody, {\n      children: [/*#__PURE__*/_jsxDEV(LayerHeadersContainer, {\n        children: layers.map(layer => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            height: '80px',\n            borderBottom: '1px solid #374151',\n            display: 'flex',\n            alignItems: 'center',\n            padding: '0 10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              fontSize: '0.875rem',\n              fontWeight: 500,\n              color: '#e5e7eb'\n            },\n            children: layer.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '4px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                width: '20px',\n                height: '20px',\n                border: 'none',\n                background: layer.isVisible ? '#6366f1' : 'transparent',\n                color: layer.isVisible ? 'white' : '#9ca3af',\n                borderRadius: '2px',\n                cursor: 'pointer',\n                fontSize: '12px'\n              },\n              title: \"Toggle visibility\",\n              children: \"\\uD83D\\uDC41\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                width: '20px',\n                height: '20px',\n                border: 'none',\n                background: layer.isLocked ? '#6366f1' : 'transparent',\n                color: layer.isLocked ? 'white' : '#9ca3af',\n                borderRadius: '2px',\n                cursor: 'pointer',\n                fontSize: '12px'\n              },\n              title: \"Toggle lock\",\n              children: \"\\uD83D\\uDD12\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                width: '20px',\n                height: '20px',\n                border: 'none',\n                background: layer.isMuted ? '#6366f1' : 'transparent',\n                color: layer.isMuted ? 'white' : '#9ca3af',\n                borderRadius: '2px',\n                cursor: 'pointer',\n                fontSize: '12px'\n              },\n              title: \"Toggle mute\",\n              children: \"\\uD83D\\uDD0A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this)]\n        }, layer.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TimelineContent, {\n        $zoom: zoom,\n        children: /*#__PURE__*/_jsxDEV(TracksContainer, {\n          onMouseDown: handlePlayheadDragStart,\n          children: layers.map(layer => /*#__PURE__*/_jsxDEV(TimelineTrack, {\n            layer: layer,\n            zoom: zoom,\n            playheadTime: playheadTime,\n            selectedClips: selectedClips,\n            onClipClick: handleClipClick,\n            onClipMove: (clipId, newStartTime) => {\n              dispatch(moveClip({\n                layerId: layer.id,\n                clipId,\n                newStartTime\n              }));\n            }\n          }, layer.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlayheadContainer, {\n      children: /*#__PURE__*/_jsxDEV(Playhead, {\n        time: playheadTime,\n        left: timeToPixels(playheadTime),\n        onSplit: handleSplitAtPlayhead,\n        onDragStart: handlePlayheadDragStart\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ZoomControls, {\n      children: [/*#__PURE__*/_jsxDEV(ZoomButton, {\n        onClick: () => handleZoom(-0.5),\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ZoomButton, {\n        onClick: () => handleZoom(0.5),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 5\n  }, this);\n};\n_s(TimelineEditor, \"UzaCyy0SM83EQ+kD3zmzye9n4gs=\", false, function () {\n  return [useAppDispatch, useAppSelector, useGesture];\n});\n_c0 = TimelineEditor;\nexport default TimelineEditor;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0;\n$RefreshReg$(_c, \"TimelineContainer\");\n$RefreshReg$(_c2, \"TimelineHeader\");\n$RefreshReg$(_c3, \"TimelineBody\");\n$RefreshReg$(_c4, \"LayerHeadersContainer\");\n$RefreshReg$(_c5, \"TimelineContent\");\n$RefreshReg$(_c6, \"TracksContainer\");\n$RefreshReg$(_c7, \"PlayheadContainer\");\n$RefreshReg$(_c8, \"ZoomControls\");\n$RefreshReg$(_c9, \"ZoomButton\");\n$RefreshReg$(_c0, \"TimelineEditor\");","map":{"version":3,"names":["React","useRef","useEffect","useCallback","styled","useGesture","useAppSelector","useAppDispatch","setPlayheadTime","setZoom","selectClip","clearSelection","moveClip","splitClip","TimelineRuler","TimelineTrack","Playhead","jsxDEV","_jsxDEV","TimelineContainer","div","theme","colors","surface","_c","TimelineHeader","border","_c2","TimelineBody","_c3","LayerHeadersContainer","surfaceHover","_c4","TimelineContent","$zoom","_c5","TracksContainer","_c6","PlayheadContainer","_c7","ZoomControls","spacing","sm","_c8","ZoomButton","button","text","borderRadius","_c9","TimelineEditor","projectId","layers","playheadTime","zoom","duration","_s","dispatch","timelineRef","selectedClips","state","timeline","isDraggingPlayhead","setIsDraggingPlayhead","useState","timeToPixels","time","pixelsPerSecond","pixelsToTime","pixels","handleTimelineScroll","deltaX","newTime","Math","max","min","handleZoom","delta","newZoom","handleClipClick","clipId","event","ctrlKey","metaKey","newSelection","includes","filter","id","handlePlayheadClick","current","rect","getBoundingClientRect","x","clientX","left","handleTimelineClick","target","currentTarget","_timelineRef$current","handlePlayheadDragMove","handlePlayheadDragEnd","document","body","style","cursor","handleSplitAtPlayhead","length","layer","find","l","clips","some","c","clip","startTime","endTime","layerId","splitTime","bind","onDrag","onWheel","deltaY","preventDefault","handleKeyDown","key","shiftKey","window","addEventListener","removeEventListener","handleMouseMove","handleMouseUp","ref","children","onTimeClick","fileName","_jsxFileName","lineNumber","columnNumber","map","height","borderBottom","display","alignItems","padding","flex","fontSize","fontWeight","color","name","gap","width","background","isVisible","title","isLocked","isMuted","onMouseDown","handlePlayheadDragStart","onClipClick","onClipMove","newStartTime","onSplit","onDragStart","onClick","_c0","$RefreshReg$"],"sources":["/Users/miko/Documents/Project/real_projects/Snipix_web/src/components/TimelineEditor.tsx"],"sourcesContent":["import React, { useRef, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useGesture } from 'react-use-gesture';\nimport { useAppSelector, useAppDispatch } from '../redux/store';\nimport { \n  setPlayheadTime, \n  setZoom, \n  selectClip,\n  clearSelection,\n  moveClip,\n  splitClip\n} from '../redux/slices/timelineSlice';\nimport { Layer, Clip } from '../types';\nimport TimelineRuler from './TimelineRuler';\nimport TimelineTrack from './TimelineTrack';\nimport Playhead from './Playhead';\n\nconst TimelineContainer = styled.div`\n  position: relative;\n  height: 100%;\n  background: ${({ theme }) => theme.colors.surface};\n  overflow: hidden;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst TimelineHeader = styled.div`\n  height: 60px;\n  background: ${({ theme }) => theme.colors.surface};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.border};\n  display: flex;\n  align-items: center;\n  padding-left: 120px; /* Account for layer headers width */\n`;\n\nconst TimelineBody = styled.div`\n  flex: 1;\n  display: flex;\n  overflow: hidden;\n`;\n\nconst LayerHeadersContainer = styled.div`\n  width: 120px;\n  background: ${({ theme }) => theme.colors.surfaceHover};\n  border-right: 1px solid ${({ theme }) => theme.colors.border};\n  flex-shrink: 0;\n`;\n\nconst TimelineContent = styled.div<{ $zoom: number }>`\n  flex: 1;\n  position: relative;\n  transform: scaleX(${({ $zoom }) => $zoom});\n  transform-origin: left top;\n`;\n\nconst TracksContainer = styled.div`\n  position: relative;\n  height: 100%;\n  overflow-y: auto;\n  overflow-x: hidden;\n`;\n\nconst PlayheadContainer = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  z-index: 1000;\n  pointer-events: none;\n`;\n\nconst ZoomControls = styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  display: flex;\n  gap: ${({ theme }) => theme.spacing.sm};\n  z-index: 100;\n`;\n\nconst ZoomButton = styled.button`\n  width: 32px;\n  height: 32px;\n  border: 1px solid ${({ theme }) => theme.colors.border};\n  background: ${({ theme }) => theme.colors.surface};\n  color: ${({ theme }) => theme.colors.text};\n  border-radius: ${({ theme }) => theme.borderRadius.sm};\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  \n  &:hover {\n    background: ${({ theme }) => theme.colors.surfaceHover};\n  }\n`;\n\nconst TimelineEditor: React.FC<{\n  projectId: string;\n  layers: Layer[];\n  playheadTime: number;\n  zoom: number;\n  duration: number;\n}> = ({ projectId, layers, playheadTime, zoom, duration }) => {\n  const dispatch = useAppDispatch();\n  const timelineRef = useRef<HTMLDivElement>(null);\n  const { selectedClips } = useAppSelector(state => state.timeline);\n  const [isDraggingPlayhead, setIsDraggingPlayhead] = React.useState(false);\n\n  // Convert time to pixels based on zoom\n  const timeToPixels = useCallback((time: number) => {\n    const pixelsPerSecond = 100; // Base pixels per second\n    return time * pixelsPerSecond * zoom;\n  }, [zoom]);\n\n  // Convert pixels to time\n  const pixelsToTime = useCallback((pixels: number) => {\n    const pixelsPerSecond = 100;\n    return pixels / (pixelsPerSecond * zoom);\n  }, [zoom]);\n\n  // Handle timeline scrolling\n  const handleTimelineScroll = useCallback((deltaX: number) => {\n    const newTime = playheadTime - pixelsToTime(deltaX);\n    dispatch(setPlayheadTime(Math.max(0, Math.min(newTime, duration))));\n  }, [playheadTime, duration, pixelsToTime, dispatch]);\n\n  // Handle zoom\n  const handleZoom = useCallback((delta: number) => {\n    const newZoom = Math.max(0.1, Math.min(10, zoom + delta * 0.1));\n    dispatch(setZoom(newZoom));\n  }, [zoom, dispatch]);\n\n  // Handle clip selection\n  const handleClipClick = useCallback((clipId: string, event: React.MouseEvent) => {\n    if (event.ctrlKey || event.metaKey) {\n      // Multi-select\n      const newSelection = selectedClips.includes(clipId)\n        ? selectedClips.filter(id => id !== clipId)\n        : [...selectedClips, clipId];\n      // For now, just select single clip\n      dispatch(selectClip(clipId));\n    } else {\n      dispatch(selectClip(clipId));\n    }\n  }, [selectedClips, dispatch]);\n\n  // Handle playhead positioning\n  const handlePlayheadClick = useCallback((event: React.MouseEvent) => {\n    if (!timelineRef.current) return;\n    \n    const rect = timelineRef.current.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const newTime = pixelsToTime(x);\n    dispatch(setPlayheadTime(Math.max(0, Math.min(newTime, duration))));\n    dispatch(clearSelection());\n  }, [pixelsToTime, duration, dispatch]);\n\n  // Handle timeline click (not on clips)\n  const handleTimelineClick = useCallback((event: React.MouseEvent) => {\n    // Only handle clicks on the timeline background, not on clips\n    if (event.target === event.currentTarget) {\n      const rect = timelineRef.current?.getBoundingClientRect();\n      if (!rect) return;\n      \n      const x = event.clientX - rect.left;\n      const newTime = pixelsToTime(x);\n      dispatch(setPlayheadTime(Math.max(0, Math.min(newTime, duration))));\n      dispatch(clearSelection());\n    }\n  }, [pixelsToTime, duration, dispatch]);\n\n  // Handle playhead drag move\n  const handlePlayheadDragMove = useCallback((event: MouseEvent) => {\n    if (!isDraggingPlayhead || !timelineRef.current) return;\n    \n    const rect = timelineRef.current.getBoundingClientRect();\n    const x = event.clientX - rect.left;\n    const newTime = pixelsToTime(x);\n    dispatch(setPlayheadTime(Math.max(0, Math.min(newTime, duration))));\n  }, [isDraggingPlayhead, pixelsToTime, duration, dispatch]);\n\n  // Handle playhead drag end\n  const handlePlayheadDragEnd = useCallback(() => {\n    setIsDraggingPlayhead(false);\n    document.body.style.cursor = 'default';\n  }, []);\n\n  // Handle clip splitting at playhead\n  const handleSplitAtPlayhead = useCallback(() => {\n    if (selectedClips.length === 1) {\n      const clipId = selectedClips[0];\n      const layer = layers.find(l => l.clips.some(c => c.id === clipId));\n      if (layer) {\n        const clip = layer.clips.find(c => c.id === clipId);\n        if (clip && playheadTime > clip.startTime && playheadTime < clip.endTime) {\n          dispatch(splitClip({\n            layerId: layer.id,\n            clipId: clip.id,\n            splitTime: playheadTime\n          }));\n        }\n      }\n    }\n  }, [selectedClips, layers, playheadTime, dispatch]);\n\n  // Gesture handling for timeline scrolling\n  const bind = useGesture({\n    onDrag: ({ delta: [deltaX], event }) => {\n      if (event.target === timelineRef.current) {\n        handleTimelineScroll(deltaX);\n      }\n    },\n    onWheel: ({ delta: [deltaX, deltaY], event }) => {\n      if (event.ctrlKey || event.metaKey) {\n        // Zoom\n        event.preventDefault();\n        handleZoom(-deltaY);\n      } else {\n        // Scroll timeline\n        event.preventDefault();\n        handleTimelineScroll(deltaX);\n      }\n    }\n  });\n\n  // Keyboard shortcuts\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      switch (event.key) {\n        case ' ':\n          event.preventDefault();\n          // Toggle play/pause\n          break;\n        case 'ArrowLeft':\n          event.preventDefault();\n          dispatch(setPlayheadTime(Math.max(0, playheadTime - 1)));\n          break;\n        case 'ArrowRight':\n          event.preventDefault();\n          dispatch(setPlayheadTime(Math.min(duration, playheadTime + 1)));\n          break;\n        case 'Delete':\n          event.preventDefault();\n          // Delete selected clips\n          break;\n        case 'c':\n          if (event.ctrlKey || event.metaKey) {\n            event.preventDefault();\n            // Copy selected clips\n          }\n          break;\n        case 'v':\n          if (event.ctrlKey || event.metaKey) {\n            event.preventDefault();\n            // Paste clips\n          }\n          break;\n        case 'z':\n          if (event.ctrlKey || event.metaKey) {\n            event.preventDefault();\n            if (event.shiftKey) {\n              // Redo\n            } else {\n              // Undo\n            }\n          }\n          break;\n        case 's':\n          if (event.ctrlKey || event.metaKey) {\n            event.preventDefault();\n            // Save timeline\n          }\n          break;\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => window.removeEventListener('keydown', handleKeyDown);\n  }, [playheadTime, duration, dispatch]);\n\n  // Handle playhead dragging\n  useEffect(() => {\n    if (isDraggingPlayhead) {\n      const handleMouseMove = (event: MouseEvent) => {\n        handlePlayheadDragMove(event);\n      };\n      \n      const handleMouseUp = () => {\n        handlePlayheadDragEnd();\n      };\n      \n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      \n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      };\n    }\n  }, [isDraggingPlayhead, handlePlayheadDragMove, handlePlayheadDragEnd]);\n\n  return (\n    <TimelineContainer ref={timelineRef} {...bind()}>\n      <TimelineHeader>\n        <TimelineRuler \n          duration={duration}\n          zoom={zoom}\n          playheadTime={playheadTime}\n          onTimeClick={handlePlayheadClick}\n        />\n      </TimelineHeader>\n      \n      <TimelineBody>\n        <LayerHeadersContainer>\n          {layers.map((layer) => (\n            <div key={layer.id} style={{ height: '80px', borderBottom: '1px solid #374151', display: 'flex', alignItems: 'center', padding: '0 10px' }}>\n              <div style={{ flex: 1, fontSize: '0.875rem', fontWeight: 500, color: '#e5e7eb' }}>\n                {layer.name}\n              </div>\n              <div style={{ display: 'flex', gap: '4px' }}>\n                <button style={{ width: '20px', height: '20px', border: 'none', background: layer.isVisible ? '#6366f1' : 'transparent', color: layer.isVisible ? 'white' : '#9ca3af', borderRadius: '2px', cursor: 'pointer', fontSize: '12px' }} title=\"Toggle visibility\">\n                  👁️\n                </button>\n                <button style={{ width: '20px', height: '20px', border: 'none', background: layer.isLocked ? '#6366f1' : 'transparent', color: layer.isLocked ? 'white' : '#9ca3af', borderRadius: '2px', cursor: 'pointer', fontSize: '12px' }} title=\"Toggle lock\">\n                  🔒\n                </button>\n                <button style={{ width: '20px', height: '20px', border: 'none', background: layer.isMuted ? '#6366f1' : 'transparent', color: layer.isMuted ? 'white' : '#9ca3af', borderRadius: '2px', cursor: 'pointer', fontSize: '12px' }} title=\"Toggle mute\">\n                  🔊\n                </button>\n              </div>\n            </div>\n          ))}\n        </LayerHeadersContainer>\n        \n        <TimelineContent $zoom={zoom}>\n          <TracksContainer onMouseDown={handlePlayheadDragStart}>\n            {layers.map((layer) => (\n              <TimelineTrack\n                key={layer.id}\n                layer={layer}\n                zoom={zoom}\n                playheadTime={playheadTime}\n                selectedClips={selectedClips}\n                onClipClick={handleClipClick}\n                onClipMove={(clipId, newStartTime) => {\n                  dispatch(moveClip({\n                    layerId: layer.id,\n                    clipId,\n                    newStartTime\n                  }));\n                }}\n              />\n            ))}\n          </TracksContainer>\n        </TimelineContent>\n      </TimelineBody>\n\n      <PlayheadContainer>\n        <Playhead \n          time={playheadTime}\n          left={timeToPixels(playheadTime)}\n          onSplit={handleSplitAtPlayhead}\n          onDragStart={handlePlayheadDragStart}\n        />\n      </PlayheadContainer>\n\n      <ZoomControls>\n        <ZoomButton onClick={() => handleZoom(-0.5)}>-</ZoomButton>\n        <ZoomButton onClick={() => handleZoom(0.5)}>+</ZoomButton>\n      </ZoomControls>\n    </TimelineContainer>\n  );\n};\n\nexport default TimelineEditor;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}