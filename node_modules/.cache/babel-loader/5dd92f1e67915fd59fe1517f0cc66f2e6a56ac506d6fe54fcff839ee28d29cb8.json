{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { apiService } from '../../services/apiService';\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: !!localStorage.getItem('token'),\n  isLoading: false,\n  error: null\n};\n\n// Async thunks\nexport const login = createAsyncThunk('auth/login', async (credentials, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await apiService.post('/auth/login', credentials);\n    const {\n      user,\n      token\n    } = response.data.data || {};\n    if (!user || !token) {\n      throw new Error('Invalid response from server');\n    }\n    localStorage.setItem('token', token);\n    return {\n      user,\n      token\n    };\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed');\n  }\n});\nexport const register = createAsyncThunk('auth/register', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await apiService.post('/auth/register', userData);\n    const {\n      user,\n      token\n    } = response.data.data || {};\n    if (!user || !token) {\n      throw new Error('Invalid response from server');\n    }\n    localStorage.setItem('token', token);\n    return {\n      user,\n      token\n    };\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed');\n  }\n});\nexport const logout = createAsyncThunk('auth/logout', async () => {\n  localStorage.removeItem('token');\n  return null;\n});\nexport const getCurrentUser = createAsyncThunk('auth/getCurrentUser', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await apiService.get('/auth/me');\n    return response.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    localStorage.removeItem('token');\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || 'Failed to get user');\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    setToken: (state, action) => {\n      state.token = action.payload;\n      state.isAuthenticated = true;\n      localStorage.setItem('token', action.payload);\n    }\n  },\n  extraReducers: builder => {\n    // Login\n    builder.addCase(login.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isAuthenticated = true;\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload || 'Login failed';\n    });\n\n    // Register\n    builder.addCase(register.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(register.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isAuthenticated = true;\n    }).addCase(register.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload || 'Registration failed';\n    });\n\n    // Logout\n    builder.addCase(logout.fulfilled, state => {\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n    });\n\n    // Get current user\n    builder.addCase(getCurrentUser.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(getCurrentUser.fulfilled, (state, action) => {\n      var _action$payload, _action$payload2;\n      state.isLoading = false;\n      state.user = ((_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.data) || null;\n      state.isAuthenticated = !!((_action$payload2 = action.payload) !== null && _action$payload2 !== void 0 && _action$payload2.data);\n    }).addCase(getCurrentUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.user = null;\n      state.token = null;\n      state.isAuthenticated = false;\n      state.error = action.payload || 'Failed to get user';\n    });\n  }\n});\nexport const {\n  clearError,\n  setToken\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","apiService","initialState","user","token","localStorage","getItem","isAuthenticated","isLoading","error","login","credentials","rejectWithValue","response","post","data","Error","setItem","_error$response","_error$response$data","register","userData","_error$response2","_error$response2$data","logout","removeItem","getCurrentUser","_","get","_error$response3","_error$response3$data","authSlice","name","reducers","clearError","state","setToken","action","payload","extraReducers","builder","addCase","pending","fulfilled","rejected","_action$payload","_action$payload2","actions","reducer"],"sources":["/Users/miko/Documents/Project/real_projects/Snipix_web/src/redux/slices/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { AuthState, User, ApiResponse } from '../../types';\nimport { apiService } from '../../services/apiService';\n\nconst initialState: AuthState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: !!localStorage.getItem('token'),\n  isLoading: false,\n  error: null,\n};\n\n// Async thunks\nexport const login = createAsyncThunk(\n  'auth/login',\n  async (credentials: { email: string; password: string }, { rejectWithValue }) => {\n    try {\n      const response = await apiService.post<ApiResponse<{ user: User; token: string }>>('/auth/login', credentials);\n      const { user, token } = response.data.data || {};\n      if (!user || !token) {\n        throw new Error('Invalid response from server');\n      }\n      localStorage.setItem('token', token);\n      return { user, token };\n    } catch (error: any) {\n      return rejectWithValue(error.response?.data?.error || 'Login failed');\n    }\n  }\n);\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (userData: { email: string; password: string; name: string }, { rejectWithValue }) => {\n    try {\n      const response = await apiService.post<ApiResponse<{ user: User; token: string }>>('/auth/register', userData);\n      const { user, token } = response.data.data || {};\n      if (!user || !token) {\n        throw new Error('Invalid response from server');\n      }\n      localStorage.setItem('token', token);\n      return { user, token };\n    } catch (error: any) {\n      return rejectWithValue(error.response?.data?.error || 'Registration failed');\n    }\n  }\n);\n\nexport const logout = createAsyncThunk(\n  'auth/logout',\n  async () => {\n    localStorage.removeItem('token');\n    return null;\n  }\n);\n\nexport const getCurrentUser = createAsyncThunk(\n  'auth/getCurrentUser',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await apiService.get<ApiResponse<User>>('/auth/me');\n      return response.data;\n    } catch (error: any) {\n      localStorage.removeItem('token');\n      return rejectWithValue(error.response?.data?.error || 'Failed to get user');\n    }\n  }\n);\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n    setToken: (state, action: PayloadAction<string>) => {\n      state.token = action.payload;\n      state.isAuthenticated = true;\n      localStorage.setItem('token', action.payload);\n    },\n  },\n  extraReducers: (builder) => {\n    // Login\n    builder\n      .addCase(login.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n        state.isAuthenticated = true;\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload as string || 'Login failed';\n      });\n\n    // Register\n    builder\n      .addCase(register.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(register.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.user = action.payload.user;\n        state.token = action.payload.token;\n        state.isAuthenticated = true;\n      })\n      .addCase(register.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload as string || 'Registration failed';\n      });\n\n    // Logout\n    builder\n      .addCase(logout.fulfilled, (state) => {\n        state.user = null;\n        state.token = null;\n        state.isAuthenticated = false;\n      });\n\n    // Get current user\n    builder\n      .addCase(getCurrentUser.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(getCurrentUser.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.user = action.payload?.data || null;\n        state.isAuthenticated = !!action.payload?.data;\n      })\n      .addCase(getCurrentUser.rejected, (state, action) => {\n        state.isLoading = false;\n        state.user = null;\n        state.token = null;\n        state.isAuthenticated = false;\n        state.error = action.payload as string || 'Failed to get user';\n      });\n  },\n});\n\nexport const {\n  clearError,\n  setToken,\n} = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}